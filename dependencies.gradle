ext {
    servletVersion = '3.1.0'
    jacksonVersion = '2.4.2'
    guavaVersion = '18.0'
    gitPropertiesPlugin = '1.4.17'
    springCloudVersion = 'Brixton.SR3'
    springBootVersion = '1.4.0.RELEASE'
    springVersion = "4.2.0.RELEASE"
    springIntegrationHttpVersion = '4.2.5.RELEASE'
    sl4jVersion = '1.7.2'
    mockitoVersion = '1.10.19'

    ametisteMetricsVersion = '0.2.0-RELEASE'
    ametisteGdcVersion = '0.1.0-RELEASE'
    dphEnvVersion = '0.2.0-3-RELEASE'
    dphEnvStarterVersion = '0.2.5-b2-RC'
    dphSearchEventsConverterVersion = '0.1.0-b3-RC'

    libraries = [
            //Logging
            slf4j                      : "org.slf4j:slf4j-api:$sl4jVersion",
            logback                    : [
                    'ch.qos.logback:logback-core:1.1.3',
                    'ch.qos.logback:logback-classic:1.1.3',
                    'ch.qos.logback:logback-access:1.1.3'
            ],
            //enable if expressions in logback configurations
            janino                     : 'org.codehaus.janino:janino:2.7.8',
            logstashLogbackEncoder     : "net.logstash.logback:logstash-logback-encoder:4.7",

            //Spring
            springCore                 : [
                    "org.springframework:spring-context:$springVersion",
                    "org.springframework:spring-beans:$springVersion"
            ],

            springBoot                 : ["org.springframework.boot:spring-boot-starter:$springBootVersion"],
            springBootWeb              : ["org.springframework.boot:spring-boot-starter-web:$springBootVersion"],
            springBootJetty            : ["org.springframework.boot:spring-boot-starter-jetty:$springBootVersion"],
            springBootActuator         : ["org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"],
            springWeb                  : "org.springframework:spring-web",
            springIntegration          : 'org.springframework.integration:spring-integration-core:4.2.4.RELEASE',

            springIntegrationKafka     : 'org.springframework.integration:spring-integration-kafka:1.2.1.RELEASE',
            springIntegrationIp        : 'org.springframework.integration:spring-integration-ip:4.2.0.RELEASE',
            springIntegrationDsl       : 'org.springframework.integration:spring-integration-java-dsl:1.1.0.RELEASE',
            springIntegrationHttp      : "org.springframework.integration:spring-integration-http:${springIntegrationHttpVersion}",

            springCloudEureka          : 'org.springframework.cloud:spring-cloud-starter-eureka:1.1.2.RELEASE',
            springCloudConfig          : 'org.springframework.cloud:spring-cloud-starter-config:1.1.1.RELEASE',
            ribbon                     : ['com.netflix.ribbon:ribbon:2.2.0',
                                          'com.netflix.ribbon:ribbon-eureka:2.2.0',
                                          'com.netflix.ribbon:ribbon-loadbalancer:2.2.0',
                                          'com.netflix.ribbon:ribbon-core:2.2.0'],

            kafkaClients               : 'org.apache.kafka:kafka-clients:0.8.2.1',
            kafka                      : 'org.apache.kafka:kafka_2.11:0.8.2.1',
            apacheMina                 : 'org.apache.mina:mina-core:2.0.10',
            cglib                      : 'cglib:cglib:3.1',

            guava                      : "com.google.guava:guava:${guavaVersion}",
            apacheHttpClient           : 'org.apache.httpcomponents:httpclient:4.5.2',
            commonsCollections         : 'commons-collections:commons-collections:3.2.1',
            commonsIO                  : 'commons-io:commons-io:2.4',
            commonsLang3               : 'org.apache.commons:commons-lang3:3.4',

            jackson                    : [
                    "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
                    "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
                    "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
                    "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonVersion}",
                    "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
            ],
            reactorBus                 : "io.projectreactor:reactor-bus:2.0.8.RELEASE",
            ametisteMetrics            : [
                    "org.ametiste.metrics:metrics-default-starter:${ametisteMetricsVersion}",
                    "org.ametiste.metrics:metrics-si:${ametisteMetricsVersion}"
            ],

            envMonitoringStarter       : "com.dph.env:env-starter-default-dashboard:${dphEnvStarterVersion}",

            ametisteGdc                : "org.ametiste.gdc:gdc-bootstrap:${ametisteGdcVersion}",

            dphEnv                     : [
                    "com.dph.env:dph-env-monitoring-processor:${dphEnvVersion}",
                    "com.dph.env:env-monitor-ame-metrics:${dphEnvVersion}",
                    "com.dph.env:env-starter-tracker-java-process:${dphEnvVersion}",
                    "com.dph.env:env-starter-dashboard-system-and-java-process:${dphEnvVersion}"
            ],

            dphEnvTrackerSystem        : "com.dph.env:env-starter-tracker-system:${dphEnvVersion}",
            eventsMessagingKafka       : "com.dph.events-bus.common:events-messaging-kafka:0.1.2-RELEASE",

            dphHttpEvent               : "com.dph:dph-http-event:0.1.1-b3-RC",

            dphSearchEventsConverter   : "com.dph.events-bus:search-events-converter:${dphSearchEventsConverterVersion}",

            eventsBusCommonEnpointApi  : "com.dph.events-bus.common:endpoint-api:0.1.2-RELEASE",

            eventsBusCommonEndpointRest: "com.dph.events-bus.common:endpoint-rest-starter:0.1.3-b5-RC",

            signalMetricsCounter       : "com.dph.events-bus.common:signal-metrics-counter:0.1.3-b2-RC",

            kafkaUnit                  : 'info.batey.kafka:kafka-unit:0.2',

            dphCommonsSpring           : 'com.dph.commons:dph-commons-spring:0.1.3-RELEASE',
            dphHealthCommon            : "com.dph.health:dph-health-common:0.1.1-SNAPSHOT",

            influxDb                   : "org.influxdb:influxdb-java:2.2",
            groovy                     : "org.codehaus.groovy:groovy-all:2.4.1",

            spock                      : [
                    "org.springframework:spring-test:$springVersion",
                    'org.spockframework:spock-spring:1.0-groovy-2.4',
                    "org.spockframework:spock-core:1.0-groovy-2.4",
                    "org.ow2.asm:asm:5.0.3",
                    "cglib:cglib-nodep:3.2.0",
                    "org.objenesis:objenesis:2.1"
            ],

            springBootStarterTest      : "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
            jodaTime                   : 'joda-time:joda-time:2.8.2',
            akka                       : ['com.typesafe.akka:akka-actor_2.11:2.4.2', 'org.scala-lang:scala-library:2.11.7'],
            hibernateValidator         : 'org.hibernate:hibernate-validator:4.2.0.Final',

            jsonassert                 : 'org.skyscreamer:jsonassert:1.3.0',

            mockito                    : "org.mockito:mockito-all:${mockitoVersion}"
    ]
}
